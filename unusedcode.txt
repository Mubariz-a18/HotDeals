    // request({ url: imageUrl, encoding: null },async function (err, response, data) {
    //     if (err) {
    //         console.log(err);
    //     } else {
    //         const buffer = sharp(data)
    //             .resize({ width: 256, height: 256 })
    //             .toBuffer()
    //         const bucket = storage.bucket(process.env.STORAGEBUCKET);

    //         const file = bucket.file(thumbnailLocation);

    //         const fileStream = file.createWriteStream();

    //         fileStream.end(buffer);

    //         const firebaseUrl = await GetUrlOfImage()

    //     }
    // });


const { getStorage, ref, deleteObject, getDownloadURL } = require("firebase/storage")
    
//       async function GetUrlOfImage(imageFileName) {

//     const storage = getStorage();

//     const pathReference = ref(storage, imageFileName);

//     const imageThumbnailUrl = await getDownloadURL(pathReference)

//     return imageThumbnailUrl
// }


// async function deleteFileFromStorage(image) {
//     const desertRef = ref(storage, `${image}`)
//     deleteObject(desertRef).then(() => {

//     }).catch(e => {
//         console.log(e)
//     })
// }
// // Initialize Firebase
// const app = initializeApp(firebaseConfig);
// const storage = getStorage(app);



// const { initializeApp } = require("firebase/app");
// const { getStorage, ref, deleteObject } = require("firebase/storage")

// // TODO: Add SDKs for Firebase products that you want to use


// const { getStorage, ref, getDownloadURL } = require("firebase/storage");
// const { initializeApp } = require("firebase/app");


// const firebaseConfig = {
//     apiKey: process.env.APIKEY,
//     authDomain: process.env.AUTHDOMAIN,
//     databaseURL: process.env.DATABASEURL,
//     projectId: process.env.PROJECTID,
//     storageBucket: process.env.STORAGEBUCKET,
//     messagingSenderId: process.env.MESSAGINGSENDERID,
//     appId: process.env.APPID,
//     measurementId: process.env.MEASUREMENTID
// };

// const imageThumbnailUrlfunc = async (thumbnailLocation) => {

//     const firebaseApp = initializeApp(firebaseConfig);

//     const firebaseStorage = getStorage(firebaseApp);

//     const pathReference = ref(firebaseStorage, thumbnailLocation);

//     const imageThumbnailUrl = await getDownloadURL(pathReference)

//     return imageThumbnailUrl
// }






// module.exports = { imageThumbnailUrlfunc }