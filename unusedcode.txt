   const serviceAccount = require('../../googleVisionKeys.json');

admin.initializeApp({

  credential: admin.credential.cert(serviceAccount),

  storageBucket: 'true-list.appspot.com'
});
   
   
    const bucket = admin.storage().bucket('true-list.appspot.com');

    // Replace imageUrl with the actual URL of the image you want to delete
    const imageUrl = 'https://firebasestorage.googleapis.com/v0/b/true-list.appspot.com/o/postimages%2F5-171684307250351?alt=media&token=b75e5501-37f6-42b8-bb15-df8ad4c4e655';

    // Extract the file name from the URL
    const fileName = decodeURIComponent(imageUrl.split('/o/')[1].split('?')[0]);
    // Delete the file
   await bucket.file(fileName).delete()
      .then(() => {
        console.log('Image deleted successfully.');
      })
      .catch((error) => {
        console.error('Error deleting image:', error);
      });



      
    console.log(await Generic.aggregate([
      {
        $group: {
          _id: '$parent_id',
          doc: { $first: '$$ROOT' } // Retrieve the first document for each unique parent_id
        }
      },
      {
        $replaceRoot: { newRoot: '$doc' } // Replace the root with the document
      },
      {
        $limit:100
      },
      {
        $project:{
          parent_id:1
        }
      }
    ]))


    /search indexes

    {
  "mappings": {
    "dynamic": false,
    "fields": {
      "Keyword": {
        "foldDiacritics": false,
        "maxGrams": 15,
        "minGrams": 2,
        "tokenization": "edgeGram",
        "type": "autocomplete"
      },
      "ad_posted_location": {
        "type": "geo"
      }
    }
  }
}


// generic search 

{
  "mappings": {
    "dynamic": false,
    "fields": {
      "SelectFields": {
        "dynamic": false,
        "fields": {
          "Brand": {
            "foldDiacritics": false,
            "maxGrams": 15,
            "minGrams": 2,
            "tokenization": "edgeGram",
            "type": "autocomplete"
          },
          "Color": {
            "foldDiacritics": false,
            "maxGrams": 15,
            "minGrams": 2,
            "tokenization": "edgeGram",
            "type": "autocomplete"
          },
          "Condition": {
            "foldDiacritics": false,
            "maxGrams": 15,
            "minGrams": 2,
            "tokenization": "edgeGram",
            "type": "autocomplete"
          },
          "Device": {
            "foldDiacritics": false,
            "maxGrams": 15,
            "minGrams": 2,
            "tokenization": "edgeGram",
            "type": "autocomplete"
          },
          "Gated Community": {
            "foldDiacritics": false,
            "maxGrams": 15,
            "minGrams": 2,
            "tokenization": "edgeGram",
            "type": "autocomplete"
          }
        },
        "type": "document"
      },
      "ad_posted_address": {
        "foldDiacritics": false,
        "maxGrams": 15,
        "minGrams": 2,
        "tokenization": "edgeGram",
        "type": "autocomplete"
      },
      "ad_posted_location": {
        "type": "geo"
      },
      "ad_status": {
        "type": "string"
      },
      "category": {
        "type": "string"
      },
      "description": {
        "foldDiacritics": false,
        "maxGrams": 15,
        "minGrams": 2,
        "tokenization": "edgeGram",
        "type": "autocomplete"
      },
      "keywordList": {
        "foldDiacritics": false,
        "maxGrams": 15,
        "minGrams": 2,
        "tokenization": "edgeGram",
        "type": "autocomplete"
      },
      "price": {
        "type": "number"
      },
      "special_mention": {
        "foldDiacritics": false,
        "maxGrams": 15,
        "minGrams": 2,
        "tokenization": "edgeGram",
        "type": "autocomplete"
      },
      "sub_category": {
        "type": "string"
      },
      "title": {
        "foldDiacritics": false,
        "maxGrams": 15,
        "minGrams": 2,
        "tokenization": "edgeGram",
        "type": "autocomplete"
      }
    }
  }
}



